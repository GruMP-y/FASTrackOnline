@{
   
    FASTService.Process.EmployeeManagementProcess empProcess = new FASTService.Process.EmployeeManagementProcess();
    FASTService.vwDepartmentList department = (FASTService.vwDepartmentList)TempData["Department"];
    ViewBag.Title = department.DepartmentName + " - Department";

    List<FASTService.vwAssetAssignmentsForManager> approvals = ViewBag.Approvals;
    
    var list = new WebGrid(approvals, canPage: true, rowsPerPage: 20, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "listContainer");
    list.Pager(WebGridPagerModes.NextPrevious);
    
    
}
<br />

<div class="container-fluid">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h1 class="panel-title">@department.GroupName</h1>
        </div>
    </div>
    <div>
        <div class="panel-info col-lg-3">
            <div class="panel-heading">
                <span class="panel-title"/>
            </div>
            <div class="panel-body" style="background-color:aliceblue">
                <center>
                    <img src="~/Images/department.jpg" width="200" height="200" class="img-rounded" />
                </center>
            </div>
            <div class="panel-body" style="background-color:whitesmoke">

                    <div class="list-group list-group-item-info">
                        <a class="list-group-item" href="@Url.Action("ShowDepartmentEmployee", "Employee", new { departmentID = @department.DepartmentID })"><span class="glyphicon glyphicon-th-list text-danger" aria-hidden="true"></span>Employee List</a>
                        <a class="list-group-item" href="@Url.Action("Unavailable","Home")"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>Assignments List</a>
                        <a class="list-group-item" href="@Url.Action("Unavailable","Home")"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>Assets List</a>
                        <a class="list-group-item" href="@Url.Action("Unavailable", "Home")"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>Others</a>
                    </div>
            </div>
            <div class="panel-body" style="background-color:snow;height:50px">
            </div>
            
        </div>
        <div class="panel-info col-lg-9">
            <div class="panel-info">
                <div class="panel-body" style="height: 200px;background-image:url('../Images/fujitsu_infinity_1.png');background-repeat:no-repeat;background-position:right">
                    <h3>@department.GroupName</h3>
                    @*<blockquote>
                        <h4>Number of employees : 12</h4>
                        <h4>Number of assets assigned :</h4>
                    </blockquote>*@
                    <p style="padding-left:10px"><span class="glyphicon glyphicon-bookmark text-success"></span>For Approval <span class="badge">(@approvals.Count().ToString())</span><br />
</div>
            </div>  
            <br />
            <hr />
            <div class="panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Waiting for Approval</h3>
                </div>
                <div class="panel-body">
                    <div class="panel-body">
                        @list.GetHtml(tableStyle: "table table-striped table-hover", headerStyle: "header", alternatingRowStyle: "alternateRow", selectedRowStyle: "select",
                        columns: list.Columns(
                        list.Column("AssetAssignmentID", "Assign ID", canSort: true, style: "col-lg-2"),
                        list.Column("AssetTag", "Asset Tag", canSort: true, style: "col-lg-2"),
                        list.Column("","Owner", format:(item) => 
                            {
                                var name = empProcess.GetEmployeeProfile(item.EmployeeID);
                                return Html.Raw("<p>" + name.LastName + " , " + name.FirstName + "</p>");
                            },canSort:false,style:"col-lg-2"),
                        list.Column("StatusDescription", "Asset Status", canSort: false, style: "col-lg-2"),
                        list.Column("AssignmentStatus", "Assignment Status", canSort: false, style: "col-lg-2"),
                        list.Column(format: (item) => Html.ActionLink("Manage", "Unavailable","Home", null, new {@class="btn btn-primary" }), style: "column-action")
                        
                ))
                    </div>

                </div>
            </div>   
        </div>
    </div>
    
</div>
<br />